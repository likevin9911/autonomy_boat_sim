<?xml version="1.0"?>
<launch>
  <!-- Notes -->
  <!-- For GMAPPING: comment out "MAP", "AMCL", "MOVE_BASE", and "Global_planner" -->

  <!-- Arguments -->
  
  
  <arg name="ptw_config_file" value="$(find usv_navigation)/config/path_to_waypoints.yaml" />

  <!-- Map Server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(find usv_description)/world/turtle.yaml" />
  <arg name="map_file" default="$(find usv_description)/world/turtle.yaml" />

  <!-- AMCL -->
  <include file="$(find usv_gazebo)/launch/amcl.launch"/>

  # Check Thruster
  <!--node pkg="usv_navigation" type="move_base_cmd.py" name="cmd_vel_to_thrusters"/-->
	
  #Run this with roslaunch usv_control control.launch
  <!--node pkg="global_planner" type="planner" name="global_planner" output="screen">
    <param name="planner/old_navfn_behavior" value="true" />
    <param name="planner/use_quadratic" value="false" />
    <param name="planner/use_dijkstra" value="false" />
    <param name="planner/use_grid_path" value="false" />
    <param name="planner/allow_unknown" value="true" />
    <param name="planner/planner_window_x" value="10.0" />
    <param name="planner/planner_window_y" value="10.0" />
    <param name="planner/default_tolerance" value="0" />
    <param name="planner/publish_scale" value="100" />
    <param name="costmap/footprint" value="[[-4, -2.4], [4, -2.4], [4, 2.4], [-4,2.4]]" />
    <param name="costmap/height" value="100" />
    <param name="costmap/width" value="100" />
    <param name="costmap/robot_radius" value="7.0" />
    <param name="costmap/static_map" value="true" />
    <param name="costmap/inflation_layer/inflation_radius" value="3.5" />
    <param name="costmap/inflation_layer/cost_scaling_factor" value="1" />
    <remap from="global_planner/planner/plan" to="waypoints" />
  </node-->


  <!-- MOVE BASE -->
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="/odom" />  
  <arg name="move_forward_only" default="false"/>
  <!-- Move Base + roslaunch vrx_gazebo usv_keydrive.launch -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_global_planner" value="global_planner/GlobalPlanner" />
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />

    <rosparam file="$(find usv_gazebo)/config/costmap_common_params.yaml" command="load" ns="global_costmap"/>
    <rosparam file="$(find usv_gazebo)/config/costmap_common_params.yaml" command="load" ns="local_costmap"/>
    <rosparam file="$(find usv_gazebo)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find usv_gazebo)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find usv_gazebo)/config/move_base_params.yaml" command="load" />
    <rosparam file="$(find usv_gazebo)/config/dwa_local_planner_params.yaml" command="load" />
    <rosparam file="$(find usv_gazebo)/config/global_planner_params.yaml" command="load" />

    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="odom" to="$(arg odom_topic)"/>
    <remap from="global_planner/planner/plan" to="waypoints" />
    <param name="DWAPlannerROS/min_vel_x" value="0.1" if="$(arg move_forward_only)" />
  </node>
  
  <!-- Path to Waypoints -->
  <node pkg="usv_navigation" type="path_to_waypoints.py" name="path_to_waypoints" output="screen">
    <rosparam command="load" file="$(arg ptw_config_file)" />
  </node>

  <!-- Suppress tf warnings -->
  <rosparam param="silent_tf_failure">true</rosparam>

  <!-- Use simulated time -->
  <param name="use_sim_time" value="true"/>

  <!-- GPS Combiner Node -->
  <node pkg="usv_navigation" type="combined_gps.py" name="gps_combiner" output="screen" />

  <!-- Single EKF node fusing IMU and combined GPS into combined odometry/tf -->
  <node ns="robot_localization" pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" clear_params="false" output="screen">
      <param name="sensor_timeout" value="2.0" />
      <param name="two_d_mode" value="true" />
      <param name="map_frame" value="map" />
      <param name="odom_frame" value="odom" />
      <param name="base_link_frame" value="base_link" />
      <param name="world_frame" value="odom" />
      <param name="publish_tf" value="true" />
      <param name="frequency" value="60" />
      <param name="imu0" value="/sensors/imu/imu/data" />
      <rosparam param="imu0_config">[false, false, false,
                                     true,  true,  true,
                                     false,  false,  false,
                                     true,  true,  true,
                                     true,  true,  true]</rosparam>
      <param name="imu0_differential" value="false" />
      <param name="imu0_remove_gravitational_acceleration" value="true" />
      <param name="odom0" value="/robot_localization/odometry/gps" />  
      <rosparam param="odom0_config">[true,  true,  true,
                                      false, false, false,
                                      false, false, false,
                                      false, false, false,
                                      false, false, false]</rosparam>
      <param name="odom0_differential" value="false" />
      <param name="smooth_lagged_data" value="true" />
      <param name="transform_time_offset" value="0.1" /> 
      <param name="transform_timeout" value="10.0" />
  </node>

  <node ns="robot_localization" pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" clear_params="false" output="screen">
      <param name="sensor_timeout" value="2.0" />
      <param name="two_d_mode" value="true" />
      <param name="map_frame" value="map" />
      <param name="odom_frame" value="odom" />
      <param name="base_link_frame" value="base_link" />
      <param name="world_frame" value="odom" />
      <param name="publish_tf" value="true" />
      <param name="frequency" value="60" />
      <param name="imu0" value="/sensors/imu/imu/data" />
      <rosparam param="imu0_config">[false, false, false,
                                     true,  true,  true,
                                     false,  false,  false,
                                     true,  true,  true,
                                     true,  true,  true]</rosparam>
      <param name="imu0_differential" value="false" />
      <param name="imu0_remove_gravitational_acceleration" value="true" />
      <param name="odom0" value="/robot_localization/odometry/gps" />  
      <rosparam param="odom0_config">[true,  true,  true,
                                      false, false, false,
                                      false, false, false,
                                      false, false, false,
                                      false, false, false]</rosparam>
      <param name="odom0_differential" value="false" />
      <param name="smooth_lagged_data" value="true" />
      <param name="transform_time_offset" value="0.1" /> 
      <param name="transform_timeout" value="10.0" />
  </node>

  <!-- navsat_transform_node for Combined GPS -->
  <node ns="robot_localization" pkg="robot_localization" type="navsat_transform_node" name="navsat_transform_node" respawn="true" output="screen">
    <param name="frequency" value="60" />
    <param name="magnetic_declination_radians" value="0" />
    <param name="broadcast_utm_transform" value="true" />
    <param name="wait_for_datum" value="true" />
    <param name="use_odometry_yaw" value="true" />
    <rosparam param="datum">[21.30996, -157.8901]</rosparam>
    <param name="yaw_offset" value="0" />
    <param name="publish_filtered_gps" value="true" />
    <remap from="robot_localization/gps/fix" to="/combined_gps/fix" />
  </node>

  
</launch>
